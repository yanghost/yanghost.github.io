<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HEXO+GITHUB笔记</title>
      <link href="2021/03/27/HEXO-GITHUB%E7%AC%94%E8%AE%B0/"/>
      <url>2021/03/27/HEXO-GITHUB%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="HEXO-GitHub搭建"><a href="#HEXO-GitHub搭建" class="headerlink" title="HEXO+GitHub搭建"></a>HEXO+GitHub搭建</h1><h2 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h2><p>-<strong>获得个人网站域名</strong><br>-<strong>GitHub创建个人仓库</strong><br>-<strong>安装Git</strong><br>-<strong>安装Node.js</strong><br>-<strong>安装Hexo</strong><br>-<strong>部署网站</strong><br>-<strong>绑定域名</strong><br>-<strong>更换主题</strong><br>-<strong>MarkDown语法</strong><br>-<strong>发布文章</strong><br>-<strong>个性化设置</strong></p><h2 id="获得个人网站域名"><a href="#获得个人网站域名" class="headerlink" title="获得个人网站域名"></a>获得个人网站域名</h2><p>域名是网站的入口，也是网站的第一印象，比如我的的域名是：<a href="https://www.zhangyingfeng.xyz/">https://www.zhangyingfeng.xyz/</a> ，常见的有com,cn,net,org等后缀，也有小众的xyz,me,io等后缀，根据你自己的喜好，选择不同的后缀，比如我选择就是常见的com后缀。很多小众奇特的后缀在大陆是没办法备案的，网站也就无法上线。然而使用GitHub托管我们的网站，完全不需要备案，因为托管我们的网站内容的服务器在美国，而且在国内备案流程也比较繁杂，时间需要一周左右。</p><p>申请域名的地方有很多，这里推荐阿里云：阿里云-为了无法计算的价值 申请入口：域名注册 购买域名这也是我们整个搭建过程中惟一一个需要花钱的地方。如果你已经有了空闲域名就无需购买，直接使用即可。</p><h2 id="GitHub创建个人仓库"><a href="#GitHub创建个人仓库" class="headerlink" title="GitHub创建个人仓库"></a>GitHub创建个人仓库</h2><p>登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号：Build software better, together 点击GitHub中的New repository创建新仓库，仓库名应该为：用户名.<a href="http://github.io/">http://github.io</a> 这个用户名使用你的GitHub帐号名称代替，这是固定写法，比如我的仓库名为：yanghost.github.io</p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>简单来说Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。我们网站在本地搭建好了，需要使用Git同步到GitHub上。如果想要了解Git的细节，请去Git官网； 从Git官网下载：Git - Downloading Package ，选择64位的安装包，下载后安装；也可以用命令直接安装</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install  git-all  </span><br></pre></td></tr></table></figure><p>在命令行里输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git --version  </span><br></pre></td></tr></table></figure><p>测试是否安装成功，若安装失败，参看其他详细的Git安装教程。安装成功后，将你的Git与GitHub帐号绑定，鼠标右击打开Git Bash或者在菜单里搜索Git Bash，设置user.name和user.email配置信息：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure><p>生成ssh密钥文件：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure><p>然后直接三个回车即可，默认不需要设置密码<br>然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制<br>打开GitHub_Settings_keys 页面，新建new SSH Key</p><p>Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。<br>在Git Bash中检测GitHub公钥设置是否成功，输入 ssh <a href="mailto:&#x67;&#105;&#116;&#64;&#x67;&#105;&#116;&#104;&#117;&#x62;&#46;&#x63;&#111;&#109;">&#x67;&#105;&#116;&#64;&#x67;&#105;&#116;&#104;&#117;&#x62;&#46;&#x63;&#111;&#109;</a> ：</p><p>这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>Hexo基于Node.js，Node.js下载地址：Download | Node.js 下载安装包，注意安装Node.js会包含环境变量及npm的安装，安装后，检测Node.js是否安装成功，在命令行中输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node -v : 显示版本号为成功</span><br></pre></td></tr></table></figure><p>检测npm是否安装成功，在命令行中输入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm -v : 显示版本号为成功</span><br></pre></td></tr></table></figure><p>到这了，安装Hexo的环境已经全部搭建完成。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>Hexo就是我们的个人博客网站的框架， 这里需要自己在电脑常里创建一个文件夹，可以命名为Blog，Hexo框架与以后你自己发布的网页都在这个文件夹中。创建好后，进入文件夹中，按住shift键，右击鼠标点击命令行<br>使用npm命令安装Hexo，输入：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli </span><br></pre></td></tr></table></figure><p>这个安装时间较长耐心等待，安装完成后，初始化我们的博客，输入：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p>注意，这里的命令都是作用在刚刚创建的Blog文件夹中。<br>为了检测我们的网站雏形，分别按顺序输入以下两条命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>这些命令在后面作介绍，完成后，打开浏览器输入地址：</p><blockquote><p>localhost:4000</p></blockquote><p>就能看到Hexo默认网站了</p><blockquote><p>现在来介绍常用的Hexo 命令</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo -g #安装Hexo</span><br><span class="line">npm update hexo -g #升级</span><br><span class="line">hexo init #初始化博客</span><br></pre></td></tr></table></figure><blockquote><p>命令简写</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo n &quot;我的博客&quot; &#x3D;&#x3D; hexo new &quot;我的博客&quot; #新建文章</span><br><span class="line">hexo g &#x3D;&#x3D; hexo generate #生成</span><br><span class="line">hexo s &#x3D;&#x3D; hexo server #启动服务预览</span><br><span class="line">hexo d &#x3D;&#x3D; hexo deploy #部署</span><br><span class="line"></span><br><span class="line">hexo server #Hexo会监视文件变动并自动更新，无须重启服务器</span><br><span class="line">hexo server -s #静态模式</span><br><span class="line">hexo server -p 5000 #更改端口</span><br><span class="line">hexo server -i 192.168.1.1 #自定义 IP</span><br><span class="line">hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</span><br></pre></td></tr></table></figure><h2 id="部署网站"><a href="#部署网站" class="headerlink" title="部署网站"></a>部署网站</h2><p>上面只是在本地预览，接下来要做的就是就是部署网站，让我们的网站可以被更多的人访问。在设置之前，需要在blog根目录里的config.yml文件称为<strong>站点</strong>配置文件；进入根目录里的themes文件夹，里面也有个config.yml文件，这个称为<strong>主题</strong>配置文件；下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy: </span><br><span class="line">      type:   git</span><br><span class="line">      repo:   https:&#x2F;&#x2F;github.com&#x2F;yanghost&#x2F;yanghost.github.io.git</span><br><span class="line">      branch: master</span><br></pre></td></tr></table></figure><blockquote><p>我们部署在我们GitHub的仓库里。最后安装Git部署插件，输入命令：</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><blockquote><p>这时，我们分别输入三条命令：</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo  g</span><br><span class="line">hexo  d</span><br></pre></td></tr></table></figure><p>第三条的 hexo d 就是部署网站命令;完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 <a href="https://link.zhihu.com/?target=http://xxxx.github.io">http://xxxx.github.io </a>比如我的xxxx就是我的GitHub用户名：yanghost.github.io</p><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>虽然在Internet上可以访问我们的网站，但是网址是GitHub提供的:<a href="https://link.zhihu.com/?target=http://xxxx.github.io">http://xxxx.github.io</a> 而我们想使用我们自己的个性化域名，这就需要绑定我们自己的域名。这里演示的是在腾讯云的域名绑定，在国内主流的域名代理厂商也就阿里云和腾讯云。登录到腾讯云，进入管理控制台的域名列表，找到你的个性化域名，进入解析</p><p>主机记录：www 记录类型：A 线路默认 记录值 ： 185.199.109.153（填写IP；此IP为我的GitHub地址）其他为默认；登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名<a href="https://zhangyingfeng.xyz点击save保存.进入本地博客文件夹/">https://zhangyingfeng.xyz点击save保存。进入本地博客文件夹</a>  ，进入blog/source目录下，创建一个记事本文件，输入你的域名，只要写进你自己的域名即可。如果带有www，那么以后访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。所以建议，不要带有www。保存，命名为CNAME ，注意保存成<strong>所有文件</strong>而不是<strong>txt文件</strong></p><blockquote><p>进入blog目录中，按住shift键右击打开命令行，依次输入：</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="跟换主题"><a href="#跟换主题" class="headerlink" title="跟换主题"></a>跟换主题</h2><p>如果你不喜欢Hexo默认的主题，可以更换不同的主题，主题传送门：<a href="https://butterfly.js.org/">https://butterfly.js.org</a> 我自己使用的是Butterfly主题，可以在blog目录中的themes文件夹中查看你自己主题是什么。现在把默认主题更改成Butterfly主题；</p><blockquote><p>在blog目录中打开命令行输入：</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure><p>打开<strong>站点</strong>的config.yml配置文件，修改主题为butterfly置文件_config.yml；</p><blockquote><p>theme: butterfly </p></blockquote><blockquote><p>如果你沒有 pug 以及 stylus 的渲染器，请下载安裝：</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h2 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a><strong>Markdown语法</strong></h2><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。Markdown语法简洁明了、容易掌握，而且功能比纯文本更强，因此写博客使用它，可以让用户更加专注的写文章，而不需要费尽心力的考虑样式，相对于html已经算是轻量级语言，像有道云笔记也支持Markdown写作。并且Markdown完全兼容html，也就是可以在文章里直接插入html代码。比如给博文添加音乐，就可以直接把音乐的外链html代码插入文章中。具体语法参看：<a href="https://link.zhihu.com/?target=http://www.appinn.com/markdown/">Markdown 语法说明(简体中文版)</a> 。当然，工欲善其事必先利其器，选择一个好的Markdown编辑器也是非常重要的，这里推荐<a href="https://link.zhihu.com/?target=http://code52.org/DownmarkerWPF/">MarkPad</a> 和<a href="https://link.zhihu.com/?target=http://www.markdownpad.com/">The Markdown Editor for Windows</a> ，这是带有预览效果的编辑器，也可以使用本地的文本编辑器，更多的Markdown的语法与编辑器自己可以百度了解。</p><h2 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h2><blockquote><p>我们开始正式发布上线博客文章，在命令行中输入：</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo n &quot;博客的名字&quot;</span><br></pre></td></tr></table></figure><p>我们会发现在blog根目录下的source文件夹中的_post文件夹中多了一个 <strong>博客名字.md</strong> 文件，使用Markdown编辑器打开，就可以开始你的个人博客之旅了；</p><p>可以用带有预览样式的Markdown编辑器实时预览书写的博文样式，</p><blockquote><p>也可以通过命令 ：</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo s  </span><br></pre></td></tr></table></figure><blockquote><p> 在本地浏览器的localhost:4000 预览博文效果。</p></blockquote><p>写好博文并且样式无误后，命令：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d  </span><br></pre></td></tr></table></figure><p>生成、部署网页。随后可以在浏览器中输入域名浏览。</p><h2 id="个性化设置"><a href="#个性化设置" class="headerlink" title="个性化设置"></a><strong>个性化设置</strong></h2><p>所谓的个性化设置就是根据个人需要添加不同的插件及功能。</p><p>基本的有：</p><p>网站标题、副标题、网站描述、作者、网站头像外部链接、网站语言、时区等。</p><p>在主题配置文件_config.yml修改基本的主题信息，博文打赏的微信、支付宝二维码图片，放在根目录的source文件夹中，并没有使用图床外链。</p><p>社交外链的设置，即在侧栏展示你的个人社交网站信息。</p><p>博文分享的插件jiathis，值设置为true。在配置文件中有很多的个性化设置，可以自己尝试更多的修改。</p><ul><li>添加音乐</li><li>添加图库</li><li>添加电影</li><li>添加友链</li><li>添加评论系统</li><li>添加搜索功能</li></ul><p>……..</p>]]></content>
      
      
      <categories>
          
          <category> Hexo  Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO  Github  笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello Word</title>
      <link href="2021/03/23/Hello%20Word/"/>
      <url>2021/03/23/Hello%20Word/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Hello-Word"><a href="#Hello-Word" class="headerlink" title="Hello Word"></a>Hello Word</h2><blockquote><p>​                                                                              你好，世界！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hello Word </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hello Word </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
